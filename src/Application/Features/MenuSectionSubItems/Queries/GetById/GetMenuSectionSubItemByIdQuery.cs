//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2024-12-11
//     Last Modified: 2024-12-11
//     Description: 
//       Defines a query to retrieve a menusectionsubitem by its ID. The result is cached 
//       to optimize performance for repeated retrievals of the same menusectionsubitem.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.DTOs;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Caching;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Mappers;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Specifications;

namespace CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Queries.GetById;

public class GetMenuSectionSubItemByIdQuery : IRequest<Result<MenuSectionSubItemDto>>
{
   public required int Id { get; set; }
}

public class GetMenuSectionSubItemByIdQueryHandler :
     IRequestHandler<GetMenuSectionSubItemByIdQuery, Result<MenuSectionSubItemDto>>
{
    private readonly IApplicationDbContext _context;

    public GetMenuSectionSubItemByIdQueryHandler(
        IApplicationDbContext context)
    {
        _context = context;
    }

    public async Task<Result<MenuSectionSubItemDto>> Handle(GetMenuSectionSubItemByIdQuery request, CancellationToken cancellationToken)
    {
        var data = await _context.MenuSectionSubItems.ApplySpecification(new MenuSectionSubItemByIdSpecification(request.Id))
                                                .ProjectTo()
                                                .FirstAsync(cancellationToken);
        return await Result<MenuSectionSubItemDto>.SuccessAsync(data);
    }
}

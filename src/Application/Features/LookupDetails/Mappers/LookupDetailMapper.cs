//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under one or more agreements.
//     The .NET Foundation licenses this file to you under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2025-01-06
//     Last Modified: 2025-01-06
//     Description: 
//       Defines mapping methods between `LookupDetail` entities and related DTOs/commands 
//       within the CleanArchitecture.Blazor application. This mapper facilitates 
//       conversions to support different operations, such as creating, updating, 
//       and projecting lookupdetail data.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.LookupDetails.Commands.AddEdit;
using CleanArchitecture.Blazor.Application.Features.LookupDetails.DTOs;
using CleanArchitecture.Blazor.Domain.Entities.Common;

namespace CleanArchitecture.Blazor.Application.Features.LookupDetails.Mappers;

#pragma warning disable RMG020
#pragma warning disable RMG012
[Mapper]
public static partial class LookupDetailMapper
{
    public static partial LookupDetailDto ToDto(LookupDetail source);
    public static partial LookupDetail FromDto(LookupDetailDto dto);
    [MapperIgnoreTarget(nameof (LookupDetail.Lookup))]
    public static partial LookupDetail FromEditCommand(AddEditLookupDetailCommand command);
    public static partial AddEditLookupDetailCommand ToEditCommand(LookupDetailDto dto);
    public static partial AddEditLookupDetailCommand CloneFromDto(LookupDetailDto dto);
    [MapperIgnoreTarget(nameof(LookupDetail.Lookup))]
    public static partial void ApplyChangesFrom(AddEditLookupDetailCommand source, LookupDetail target);
    public static partial IQueryable<LookupDetailDto> ProjectTo(this IQueryable<LookupDetail> q);
}


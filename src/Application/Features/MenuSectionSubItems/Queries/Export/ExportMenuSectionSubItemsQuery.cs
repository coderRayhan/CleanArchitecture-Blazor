//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2024-12-11
//     Last Modified: 2024-12-11
//     Description: 
//       Defines a query to export menusectionsubitem data to an Excel file. This query 
//       applies advanced filtering options and generates an Excel file with 
//       the specified menusectionsubitem details.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.DTOs;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Mappers;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Caching;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Specifications;

namespace CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Queries.Export;

public class ExportMenuSectionSubItemsQuery : MenuSectionSubItemAdvancedFilter, IRequest<Result<byte[]>>
{
      public MenuSectionSubItemAdvancedSpecification Specification => new MenuSectionSubItemAdvancedSpecification(this);
    public override string ToString()
    {
        return $"Listview:{ListView}:{CurrentUser?.UserId}-{LocalTimezoneOffset.TotalHours}, Search:{Keyword}, {OrderBy}, {SortDirection}";
    }
}
    
public class ExportMenuSectionSubItemsQueryHandler :
         IRequestHandler<ExportMenuSectionSubItemsQuery, Result<byte[]>>
{
        private readonly IApplicationDbContext _context;
        private readonly IExcelService _excelService;
        private readonly IStringLocalizer<ExportMenuSectionSubItemsQueryHandler> _localizer;
        private readonly MenuSectionSubItemDto _dto = new();
        public ExportMenuSectionSubItemsQueryHandler(
            IApplicationDbContext context,
            IExcelService excelService,
            IStringLocalizer<ExportMenuSectionSubItemsQueryHandler> localizer
            )
        {
            _context = context;
            _excelService = excelService;
            _localizer = localizer;
        }
        #nullable disable warnings
        public async Task<Result<byte[]>> Handle(ExportMenuSectionSubItemsQuery request, CancellationToken cancellationToken)
        {
            var data = await _context.MenuSectionSubItems.ApplySpecification(request.Specification)
                       .OrderBy($"{request.OrderBy} {request.SortDirection}")
                       .ProjectTo()
                       .AsNoTracking()
                       .ToListAsync(cancellationToken);
            var result = await _excelService.ExportAsync(data,
                new Dictionary<string, Func<MenuSectionSubItemDto, object?>>()
                {
                    // TODO: Define the fields that should be exported, for example:
                    {_localizer[_dto.GetMemberDescription(x=>x.MenuSectionItemId)],item => item.MenuSectionItemId}, 
{_localizer[_dto.GetMemberDescription(x=>x.Title)],item => item.Title}, 
{_localizer[_dto.GetMemberDescription(x=>x.Href)],item => item.Href}, 
{_localizer[_dto.GetMemberDescription(x=>x.PageStatus)],item => item.PageStatus.ToString()}, 
{_localizer[_dto.GetMemberDescription(x=>x.Target)],item => item.Target}, 

                }
                , _localizer[_dto.GetClassDescription()]);
            return await Result<byte[]>.SuccessAsync(result);
        }
}
